[{"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/containers/AppContainer.js":"1","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Projects.js":"2","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Home.js":"3","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/index.js":"4","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Resume.js":"5","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Contact.js":"6"},{"size":4249,"mtime":1607139885485,"results":"7","hashOfConfig":"8"},{"size":6849,"mtime":1607191669565,"results":"9","hashOfConfig":"8"},{"size":4678,"mtime":1607218204174,"results":"10","hashOfConfig":"8"},{"size":367,"mtime":1607052092403,"results":"11","hashOfConfig":"8"},{"size":295,"mtime":1607052227023,"results":"12","hashOfConfig":"8"},{"size":393,"mtime":1607136730076,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1mocbit",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/containers/AppContainer.js",["27","28"],"import React, { Component, Fragment } from 'react'\nimport Home from '../components/Home'\nimport Projects from '../components/Projects'\nimport Resume from '../components/Resume'\nimport Contact from '../components/Contact'\nimport { Switch, Route } from 'react-router-dom'\nimport { Container, Divider, Grid, List, Segment, Icon, Button, Menu, Image } from 'semantic-ui-react'\n\nclass AppContainer extends Component {\n\n  componentDidMount() {\n    console.log(\"App container mounted!\")\n    this.props.history.push(\"/home\")\n  }\n\n  state = {\n    selection: \"home\"\n  }\n\n  handleClick = (e) => {\n    let newSelection;\n    if (e.target.className.includes(\"home\")) {\n      newSelection = \"home\"\n    } else if (e.target.className.includes(\"projects\")) {\n      newSelection = \"projects\"\n    } else if (e.target.className.includes(\"resume\")) {\n      newSelection = \"resume\"\n    } else if (e.target.className.includes(\"contact\")) {\n      newSelection = \"contact\"\n    }\n\n    this.setState({\n      selection: newSelection\n    }, () => this.renderSelection())\n  }\n\n  renderSelection() {\n    if (this.state.selection === \"home\") {\n      this.props.history.push(\"/home\")\n    } else if (this.state.selection === \"projects\") {\n      this.props.history.push(\"/projects\")\n    } else if (this.state.selection === \"resume\") {\n      this.props.history.push(\"/resume\")\n    } else if (this.state.selection === \"contact\") {\n      this.props.history.push(\"contact\")\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Menu fixed='top' inverted icon borderless>\n            <Container>\n              <Menu.Item onClick={this.handleClick} className=\"home\"><Icon name=\"home\" size=\"large\"/></Menu.Item>\n              <Menu.Item position=\"right\" onClick={this.handleClick} className=\"home\">About Me</Menu.Item>\n              <Menu.Item onClick={this.handleClick} className=\"projects\">Projects</Menu.Item>\n              <Menu.Item href='https://medium.com/@nathanielcain'>Blogs</Menu.Item>\n              <Menu.Item onClick={this.handleClick} className=\"resume\">Resume</Menu.Item>\n              <Menu.Item onClick={this.handleClick} className=\"contact\">Contact</Menu.Item>\n            </Container>\n          </Menu>\n        </Container>\n        <Switch>\n          <Route path=\"/home\" render={(routeProps) => {\n              return <Home {...routeProps} />\n            }} />\n            <Route path=\"/projects\" render={(routeProps) => {\n              return <Projects {...routeProps} />\n            }} />\n            <Route path=\"/resume\" render={(routeProps) => {\n              return <Resume {...routeProps} />\n            }} />\n            <Route path=\"/contact\" render={(routeProps) => {\n              return <Contact {...routeProps}/>\n            }} />\n        </Switch>\n        <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\n          <Container textAlign='center'>\n            <Grid inverted stackable columns={4} centered>\n              <Grid.Column width={1} textAlign=\"center\">\n                <Button circular color=\"blue\" icon='github' href=\"https://github.com/yunglaundromat\"/>\n              </Grid.Column>\n              <Grid.Column width={1} textAlign=\"center\">\n                <Button circular color=\"blue\" icon='linkedin' href=\"https://www.linkedin.com/in/nathaniel-cain-6b7703176/\"/>\n              </Grid.Column>\n              <Grid.Column width={1} textAlign=\"center\">\n                <Button circular color=\"blue\" icon='angellist' href=\"https://angel.co/u/nathaniel-cain\"/>\n              </Grid.Column>\n              <Grid.Column width={1} textAlign=\"center\">\n                <Button circular color=\"blue\" icon='medium m' href=\"https://medium.com/@nathanielcain\"/>\n              </Grid.Column>\n            </Grid>\n            <Divider inverted section />\n            <List horizontal inverted link size='small'>\n              <List.Item>\n                Copyright Â© 2020 Nathaniel Cain\n              </List.Item>\n              <br></br>\n              <List.Item>\n                Built with Semantic UI React<span> </span>\n                <Icon name='react' />\n              </List.Item>\n            </List>\n          </Container>\n        </Segment>\n      </div>\n    )\n  }\n}\n\nexport default AppContainer;\n","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Projects.js",[],"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Home.js",["29","30"],"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/index.js",[],"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Resume.js",[],"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Contact.js",["31"],{"ruleId":"32","severity":1,"message":"33","line":1,"column":28,"nodeType":"34","messageId":"35","endLine":1,"endColumn":36},{"ruleId":"32","severity":1,"message":"36","line":7,"column":71,"nodeType":"34","messageId":"35","endLine":7,"endColumn":76},{"ruleId":"32","severity":1,"message":"37","line":2,"column":18,"nodeType":"34","messageId":"35","endLine":2,"endColumn":22},{"ruleId":"38","severity":1,"message":"39","line":11,"column":13,"nodeType":"40","endLine":11,"endColumn":34},{"ruleId":"32","severity":1,"message":"37","line":2,"column":18,"nodeType":"34","messageId":"35","endLine":2,"endColumn":22},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'Icon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]