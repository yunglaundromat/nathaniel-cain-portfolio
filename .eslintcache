[{"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/containers/AppContainer.js":"1","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/NavBar.js":"2","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Projects.js":"3","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/App.js":"4","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Home.js":"5","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/index.js":"6","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Resume.js":"7","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Blogs.js":"8"},{"size":3745,"mtime":1606710903095,"results":"9","hashOfConfig":"10"},{"size":880,"mtime":1606759256431,"results":"11","hashOfConfig":"10"},{"size":6826,"mtime":1606803551606,"results":"12","hashOfConfig":"10"},{"size":412,"mtime":1606675526162,"results":"13","hashOfConfig":"10"},{"size":4532,"mtime":1606795870186,"results":"14","hashOfConfig":"10"},{"size":303,"mtime":1606776552130,"results":"15","hashOfConfig":"10"},{"size":212,"mtime":1606248613272,"results":"16","hashOfConfig":"10"},{"size":217,"mtime":1606700670582,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1mocbit",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/containers/AppContainer.js",["38","39","40","41","42"],"import React, { Component, Fragment } from 'react'\nimport NavBar from '../components/NavBar'\nimport Blogs from '../components/Blogs'\nimport Home from '../components/Home'\nimport Projects from '../components/Projects'\nimport Resume from '../components/Resume'\nimport { Switch, Route } from 'react-router-dom'\nimport { Container, Divider, Dropdown, Grid, Header, Image, List, Menu, Segment, Icon } from 'semantic-ui-react'\n\nclass AppContainer extends Component {\n\n  componentDidMount() {\n    console.log(\"App container mounted!\")\n  }\n\n  state = {\n    selection: \"home\"\n  }\n\n  handleClick = (e) => {\n    let newSelection;\n    if (e.target.className.includes(\"home\")) {\n      newSelection = \"home\"\n    } else if (e.target.className.includes(\"projects\")) {\n      newSelection = \"projects\"\n    } else if (e.target.className.includes(\"blogs\")) {\n      newSelection = \"blogs\"\n    } else if (e.target.className.includes(\"resume\")) {\n      newSelection = \"resume\"\n    }\n\n    this.setState({\n      selection: newSelection\n    })\n  }\n\n  renderSelection() {\n    if (this.state.selection === \"home\") {\n      return <Home />\n    } else if (this.state.selection === \"projects\") {\n      return <Projects />\n    } else if (this.state.selection === \"blogs\") {\n      return <Blogs />\n    } else if (this.state.selection === \"resume\") {\n      return <Resume />\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Fragment>\n          <NavBar handleClick={this.handleClick}/>\n        </Fragment>\n        {this.renderSelection()}\n        <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\n          <Container textAlign='center'>\n            <Grid divided inverted stackable>\n              <Grid.Column width={3}>\n                <Header inverted as='h4' content='Group 1' />\n                <List link inverted>\n                  <List.Item as='a'>Link One</List.Item>\n                  <List.Item as='a'>Link Two</List.Item>\n                  <List.Item as='a'>Link Three</List.Item>\n                  <List.Item as='a'>Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Header inverted as='h4' content='Group 2' />\n                <List link inverted>\n                  <List.Item as='a'>Link One</List.Item>\n                  <List.Item as='a'>Link Two</List.Item>\n                  <List.Item as='a'>Link Three</List.Item>\n                  <List.Item as='a'>Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Header inverted as='h4' content='Group 3' />\n                <List link inverted>\n                  <List.Item as='a'>Link One</List.Item>\n                  <List.Item as='a'>Link Two</List.Item>\n                  <List.Item as='a'>Link Three</List.Item>\n                  <List.Item as='a'>Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={7}>\n                <Header inverted as='h4' content='Footer Header' />\n                <p>\n                  Extra space for a call to action inside the footer that could help re-engage users.\n                </p>\n              </Grid.Column>\n            </Grid>\n\n            <Divider inverted section />\n            <List horizontal inverted divided link size='small'>\n              <List.Item as='a' href='#'>\n                Copyright Â© 2020 Nathaniel Cain\n              </List.Item>\n              <List.Item as='a' href='#'>\n                Built with Semantic UI React\n                <Icon name='react' />\n              </List.Item>\n            </List>\n          </Container>\n        </Segment>\n      </div>\n    )\n  }\n}\n\nexport default AppContainer;\n","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/NavBar.js",["43","44","45"],"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Projects.js",["46","47"],"import React, { Component, Fragment } from 'react'\nimport { Header, Image, Container, List, Grid, Icon } from 'semantic-ui-react'\n\nclass Projects extends Component {\n\n  componentDidMount() {\n    console.log(\"projects!\")\n  }\n\n  render() {\n    return(\n      <div>\n      <Container style={{ marginTop: '6em' }}>\n        <Header as='h1' size='massive' color=\"blue\">\n          <Icon name='folder open' />\n          <Header.Content>\n            Projects\n            <Header.Subheader>Individual projects and collaborative creations.</Header.Subheader>\n          </Header.Content>\n        </Header>\n        <Header as='h2' dividing>\n        </Header>\n        <Grid columns={2} stackable centered>\n          <Grid.Column style={{ marginTop: '2em' }}>\n            <List>\n              <List.Item>\n                <List.Icon name='folder' />\n                <List.Content>\n                  <List.Header>cryptotrader</List.Header>\n                  <List.Description>Cryptocurrency purchasing simulator that reflects real-time values of a vast array of cryptocurrencies.</List.Description><br></br>\n                  <List.List>\n                    <List.Item>\n                      <List.Icon name='folder' />\n                      <List.Content>\n                        <List.Header>client-side</List.Header>\n                        <List.Description>Fetches data to the front-end server using React.js from Coinranking API, which is updated every few minutes to give real-time values of cryptocurrency. Allows the user to sell coins, check their capital gain, coins owned, as well as add cash to, and subtract funds from, their CryptoTrader portfolio.</List.Description>\n                        <List.List>\n                          <List.Item>\n                            <List.Icon name='linkify' />\n                            <List.Content>\n                              <List.Header><a href=\"https://github.com/wsaffran/crypto-trader-client\">client-side github repository</a></List.Header>\n                            </List.Content>\n                          </List.Item>\n                        </List.List>\n                      </List.Content>\n                    </List.Item><br></br>\n                    <List.Item>\n                      <List.Icon name='folder' />\n                      <List.Content>\n                        <List.Header>server-side</List.Header>\n                        <List.Description>Persists data of purchased coins to the Rails server, giving the user a portfolio of their purchased coins. Utilizes a PostgreSQL database using ORM with ActiveRecord.</List.Description>\n                        <List.List>\n                          <List.Item>\n                            <List.Icon name='linkify' />\n                            <List.Content>\n                              <List.Header><a href=\"https://github.com/wsaffran/crypto-trader-backend\">server-side github repository</a></List.Header>\n                            </List.Content>\n                          </List.Item>\n                        </List.List>\n                      </List.Content>\n                    </List.Item>\n                  </List.List>\n                </List.Content>\n              </List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column style={{ marginTop: '2em' }}>\n            <div class=\"container\">\n              <video src=\"cryptotraderclientdemo.mov\" width=\"600\" controls></video>\n            </div>\n          </Grid.Column>\n        </Grid>\n        <br></br>\n        <Header as='h2' dividing>\n        </Header>\n        <br></br>\n        <Grid columns={2} stackable centered>\n          <Grid.Column style={{ marginTop: '2em' }}>\n            <List>\n              <List.Item>\n                <List.Icon name='folder' />\n                <List.Content>\n                  <List.Header>bike share international</List.Header>\n                  <List.Description>Comprehensive app to assist users looking to find bike share systems and stations in cities across the world.</List.Description><br></br>\n                  <List.List>\n                    <List.Item>\n                      <List.Icon name='folder' />\n                      <List.Content>\n                        <List.Header>client-side</List.Header>\n                        <List.Description>Fetches data to the front-end server from City Bikes API, giving information on every bike sharing system across the world. Once the user selects a city, they are able to view all bike share systems within the city limits. From there, they are able to view every bike share station within the selected system, providing information on how many bikes and free slots are at each station. Allows the user to log in using JWT for authentication/authorization, and subsequently add a network to their favorites list.</List.Description>\n                        <List.List>\n                          <List.Item>\n                            <List.Icon name='linkify' />\n                            <List.Content>\n                              <List.Header><a href=\"https://github.com/yunglaundromat/mod4-bikeshare-proj-client\">client-side github repository</a></List.Header>\n                            </List.Content>\n                          </List.Item>\n                        </List.List>\n                      </List.Content>\n                    </List.Item><br></br>\n                    <List.Item>\n                      <List.Icon name='folder' />\n                      <List.Content>\n                        <List.Header>server-side</List.Header>\n                        <List.Description>Persists login data and favorites list of each user to the backend using Ruby on Rails. Additionally, allows users to add a new network entry if the network is missing from the data fetched from City Bikes API. Utilizes a PostgreSQL database using ORM with ActiveRecord.</List.Description>\n                        <List.List>\n                          <List.Item>\n                            <List.Icon name='linkify' />\n                            <List.Content>\n                              <List.Header><a href=\"https://github.com/whosAle/bikeshare-app-backend\">server-side github repository</a></List.Header>\n                            </List.Content>\n                          </List.Item>\n                        </List.List>\n                      </List.Content>\n                    </List.Item>\n                  </List.List>\n                </List.Content>\n              </List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column style={{ marginTop: '2em' }}>\n            <div class=\"container\">\n              <video src=\"bikeshareinternationaldemo.mov\" width=\"600\" controls></video>\n            </div>\n          </Grid.Column>\n        </Grid>\n      </Container>\n      </div>\n    )\n  }\n}\n\nexport default Projects;\n","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/App.js",["48","49","50","51"],"import React, { Component, Fragment } from 'react';\nimport AppContainer from './containers/AppContainer'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    console.log('App component mounted!')\n  }\n\n  render() {\n\n    return (\n      <div>\n        <AppContainer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Home.js",["52","53","54","55"],"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/index.js",["56"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-less/semantic.less';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'));\n","/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Resume.js",[],"/Users/nathanielcain/Desktop/Development/nathaniel-cain-portfolio/src/components/Blogs.js",[],{"ruleId":"57","severity":1,"message":"58","line":7,"column":10,"nodeType":"59","messageId":"60","endLine":7,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":7,"column":18,"nodeType":"59","messageId":"60","endLine":7,"endColumn":23},{"ruleId":"57","severity":1,"message":"62","line":8,"column":30,"nodeType":"59","messageId":"60","endLine":8,"endColumn":38},{"ruleId":"57","severity":1,"message":"63","line":8,"column":54,"nodeType":"59","messageId":"60","endLine":8,"endColumn":59},{"ruleId":"57","severity":1,"message":"64","line":8,"column":67,"nodeType":"59","messageId":"60","endLine":8,"endColumn":71},{"ruleId":"57","severity":1,"message":"65","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"66","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},{"ruleId":"57","severity":1,"message":"63","line":2,"column":24,"nodeType":"59","messageId":"60","endLine":2,"endColumn":29},{"ruleId":"57","severity":1,"message":"67","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"63","line":2,"column":18,"nodeType":"59","messageId":"60","endLine":2,"endColumn":23},{"ruleId":"57","severity":1,"message":"67","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"68","line":3,"column":27,"nodeType":"59","messageId":"60","endLine":3,"endColumn":33},{"ruleId":"57","severity":1,"message":"61","line":3,"column":35,"nodeType":"59","messageId":"60","endLine":3,"endColumn":40},{"ruleId":"57","severity":1,"message":"58","line":3,"column":42,"nodeType":"59","messageId":"60","endLine":3,"endColumn":48},{"ruleId":"57","severity":1,"message":"69","line":2,"column":42,"nodeType":"59","messageId":"60","endLine":2,"endColumn":48},{"ruleId":"57","severity":1,"message":"70","line":2,"column":50,"nodeType":"59","messageId":"60","endLine":2,"endColumn":57},{"ruleId":"57","severity":1,"message":"64","line":2,"column":65,"nodeType":"59","messageId":"60","endLine":2,"endColumn":69},{"ruleId":"57","severity":1,"message":"71","line":2,"column":71,"nodeType":"59","messageId":"60","endLine":2,"endColumn":78},{"ruleId":"57","severity":1,"message":"61","line":6,"column":35,"nodeType":"59","messageId":"60","endLine":6,"endColumn":40},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Dropdown' is defined but never used.","'Image' is defined but never used.","'Menu' is defined but never used.","'Component' is defined but never used.","'Header' is defined but never used.","'Fragment' is defined but never used.","'Router' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Segment' is defined but never used."]